{"version":3,"file":"components-final-form-DebugForm-DebugFormState-stories.05f9a23f.iframe.bundle.js","mappings":";;;AAQA;AAiBA;;;ACjBA;AAiBA;;ACpBA;;;;;;AAQA;AACA;AAGA;;;ACRA;;;;;;;AAOA;AAEA;AACA;;AAIA","sources":["webpack://@amsterdam/amsterdam-react-final-form/./src/components/final-form/DebugForm/DebugFormState.tsx","webpack://@amsterdam/amsterdam-react-final-form/./src/components/final-form/DebugForm/DebugFormValues.tsx","webpack://@amsterdam/amsterdam-react-final-form/./src/components/final-form/ArrayField/layout.tsx","webpack://@amsterdam/amsterdam-react-final-form/./src/components/layout/FormGrid.tsx"],"sourcesContent":["import React from \"react\"\nimport { useFormState } from \"react-final-form\"\nimport styled from \"styled-components\"\nimport { themeColor } from \"@amsterdam/asc-ui\"\n\nconst Pre = styled.pre`\n  margin: 0;\n  padding: 20px;\n  background-color: ${ themeColor(\"tint\", \"level3\") }\n`\n\nconst DebugFormState:React.FC = () => {\n  const form = useFormState()\n  return (\n    <>\n      <Pre>\n        \\/\\/ debug form state:\n      </Pre>\n      <Pre>\n        { JSON.stringify(form, null, 2) }\n      </Pre>\n    </>\n  )\n}\n\nexport default DebugFormState\n","import React from \"react\"\nimport { useFormState } from \"react-final-form\"\nimport styled from \"styled-components\"\nimport { themeColor } from \"@amsterdam/asc-ui\"\n\nconst Pre = styled.pre`\n  margin: 0;\n  padding: 20px;\n  background-color: ${ themeColor(\"tint\", \"level3\") }\n`\n\nconst DebugFormValues:React.FC = () => {\n  const { values } = useFormState()\n  return (\n    <>\n      <Pre>\n        \\/\\/ debug form values:\n      </Pre>\n      <Pre>\n        { JSON.stringify(values, null, 2) }\n      </Pre>\n    </>\n  )\n}\n\nexport default DebugFormValues\n","import styled from \"styled-components\"\nimport { Button, themeSpacing } from \"@amsterdam/asc-ui\"\n\nexport const RowButtonWrap = styled.div`\n  \n  margin: ${ themeSpacing(1) };\n   \n  -ms-grid-column: 999;\n  \n  grid-row-start: 2;\n  -ms-grid-row: 2;  \n`\n\nexport const AddButtonWrap = styled.div`\n  margin-top: ${ themeSpacing(1) };\n`\n\nexport const StyledButton = styled(Button)`\n  min-width: 48px;  \n`\n","import styled, { css } from \"styled-components\"\nimport { Responsive, responsiveProps } from \"./responsiveProps\"\nimport { themeSpacing } from \"@amsterdam/asc-ui\"\n\nexport type FormGridProps = {\n  columns?: Responsive<string>\n}\n\nconst FormGrid = styled.div<FormGridProps>`\n  margin: 0 -${ themeSpacing(2) };\n\n  display: -ms-grid;\n  display: grid;\n\n  -ms-grid-columns: 1fr;   \n  \n  ${ (props:FormGridProps) => responsiveProps(props, {\n      columns: (string) => css`\n        -ms-grid-columns: ${ string };           \n        grid-template-columns: ${ string };\n      `  \n  }) }\n`\nFormGrid.displayName = \"FormGrid\"\n\nexport default FormGrid\n"],"names":[],"sourceRoot":""}