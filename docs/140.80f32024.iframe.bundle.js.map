{"version":3,"file":"140.80f32024.iframe.bundle.js","mappings":";;;;;;;AAgBA;;AAEA;AAEA;;AAGA;;AAqMA;AA7DA;;;;;;;;;;AAUA;AACA;;;;AAKA;;AAEA;AAvJA;;AAKA;AACA;AACA;;;;AAIA;;AAGA;;AAGA;AACA;AACA;;;;AAIA;;;AAGA;;AAGA;;AAEA;AACA;;;AAIA;;AAGA;AACA;;;;AAIA;;AAGA;;AAGA;AACA;AACA;AACA;;;AAGA;;AAGA;;;;;;AAOA;;AAEA;;;AAGA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAGA;AAEA;AACA;;AAEA;;AAGA;AAEA;AACA;;AAEA;AACA;;AAEA;;AAGA;AAGA;AAGA;AAEA;;;AAGA;AAEA;;;;AAIA;AAGA;AAEA;;;AAIA;AC1JA;;;;;;;;ADkLA;;;;;;AAOA;;;;;AAKA;;;;AAIA;;;;;;;AAOA;AACA;AACA;;AAEA;AAEA;AACA;;;AAGA;;;;AErNA;;;;;;;;;ACeA;;;;;;;;;;AAUA;;;AAGA;AAEA;AACA;AACA;;AAGA;;;;;;;;AAQA;AACA;;;AAIA;;AAIA;;AAEA;;;;;;AAMA;AAIA;;;;;;ACrDA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AAEA;;;AAGA;;;AAGA;AACA;AACA;;;;AAIA;AAEA;;;AC9BA;;;;AAIA;;AAEA;AACA;;AAGA;;;;AAIA;AAEA;;AAGA;AACA;AAEA;;ACvBA;;AAEA;AACA;AACA;;AAIA;;;AAGA;;;AAIA;AAEA;AACA;;;;AAIA;;;AAKA;AAKA;;;AAKA;;AAIA;;;AAIA;;;;;;;;;;;ACpCA;AACA;;;;;ACfA","sources":["webpack://@amsterdam/amsterdam-react-final-form/./node_modules/@amsterdam/asc-ui/es/components/Button/ButtonStyle.js","webpack://@amsterdam/amsterdam-react-final-form/./node_modules/@amsterdam/asc-ui/es/components/shared/ie-fixes.js","webpack://@amsterdam/amsterdam-react-final-form/./node_modules/@amsterdam/asc-ui/es/components/Button/Button.js","webpack://@amsterdam/amsterdam-react-final-form/./node_modules/@amsterdam/asc-ui/es/components/Checkbox/CheckboxStyle.js","webpack://@amsterdam/amsterdam-react-final-form/./node_modules/@amsterdam/asc-ui/es/components/Icon/IconStyle.js","webpack://@amsterdam/amsterdam-react-final-form/./node_modules/@amsterdam/asc-ui/es/components/Input/InputStyle.js","webpack://@amsterdam/amsterdam-react-final-form/./node_modules/@amsterdam/asc-ui/es/components/Label/LabelStyle.js","webpack://@amsterdam/amsterdam-react-final-form/./node_modules/@amsterdam/asc-ui/es/components/Spinner/SpinnerStyle.js","webpack://@amsterdam/amsterdam-react-final-form/./node_modules/@amsterdam/asc-ui/es/components/Spinner/Spinner.js"],"sourcesContent":["import { darken, readableColor, size, transitions } from 'polished';\r\nimport styled, { css } from 'styled-components';\r\nimport { svgFill, themeColor, themeSpacing } from '../../utils';\r\nimport Icon from '../Icon';\r\nimport { flexboxMinHeightFix } from '../shared/ie-fixes';\r\nconst defaultProps = {\r\n    size: 30,\r\n};\r\nexport const getButtonHeight = (theme) => themeSpacing(11)({ theme });\r\nexport const ArrowRight = styled.div `\n  position: relative;\n  top: 0;\n  right: -15px;\n  width: 0;\n  height: 0;\n  border: 22px solid rgba(255, 255, 255, 0);\n  border-left: 15px solid ${themeColor('secondary')};\n  border-right: 0;\n  ${transitions('border-color', '0.1s ease-in-out')}\n`;\r\nexport const IconLeft = styled(Icon) `\n  margin-right: 10px;\n`;\r\nexport const IconRight = styled(Icon) `\n  margin-left: 10px;\n`;\r\nconst getVariant = () => ({ theme, variant, color, }) => {\r\n    switch (variant) {\r\n        case 'primary':\r\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('primary')};\n          color: ${readableColor(themeColor('primary')({ theme }))};\n          ${svgFill(themeColor('tint', 'level1'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('primary')({ theme }))};\n          }\n        `;\r\n        case 'secondary':\r\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('secondary')};\n          color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('tint', 'level1'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('secondary')({ theme }))};\n          }\n\n          ${(taskflow) => taskflow &&\r\n                css `\n              &:not(:disabled)&:focus\n                ${ArrowRight},\n                &:not(:disabled)&:hover\n                ${ArrowRight} {\n                border-left-color: ${darken(0.1, themeColor('secondary')({ theme }))};\n              }\n            `}\n        `;\r\n        case 'tertiary':\r\n            return css `\n          min-width: 90px;\n          background-color: ${themeColor('tint', 'level4')};\n          ${svgFill(themeColor('tint', 'level7'))};\n\n          &:focus,\n          &:hover {\n            background-color: ${darken(0.1, themeColor('tint', 'level4')({ theme }))};\n          }\n        `;\r\n        case 'primaryInverted':\r\n            return css `\n          min-width: 90px;\n          color: ${themeColor('primary')};\n          border: 1px solid ${themeColor('primary')};\n          background-color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('primary', 'main'))};\n\n          &:hover {\n            outline: 1px solid ${themeColor('primary')};\n          }\n        `;\r\n        case 'textButton':\r\n            return css `\n          height: auto;\n          padding: 0;\n          align-self: baseline;\n          white-space: normal;\n          text-align: left;\n          color: ${themeColor('primary')};\n          background-color: rgba(0, 0, 0, 0);\n          ${svgFill(themeColor('primary', 'main'))};\n\n          /* remove transition because it's async with Icon */\n          ${transitions('color', '0s')}\n\n          &:hover {\n            color: ${themeColor('secondary')};\n            ${svgFill(themeColor('secondary', 'main'))};\n          }\n\n          ${IconLeft} {\n            margin-right: ${themeSpacing(1)};\n          }\n          ${IconRight} {\n            margin-left: ${themeSpacing(1)};\n          }\n        `;\r\n        case 'blank':\r\n            return css `\n          background-color: ${themeColor('tint', 'level1')};\n          ${svgFill(themeColor('tint', 'level7'))};\n          &:hover {\n            background-color: ${themeColor('tint', 'level3')};\n          }\n        `;\r\n        case 'application':\r\n            return css `\n          border: 1px solid ${themeColor('tint', 'level7')};\n          background-color: ${themeColor('tint', 'level1')};\n          height: 32px;\n          padding: ${themeSpacing(1, 2)};\n          ${svgFill(themeColor('tint', 'level7'))};\n          &:hover {\n            background-color: ${themeColor('tint', 'level4')};\n          }\n        `;\r\n        default:\r\n            // About-to-be-deprecated codeblock to support the 'color' prop\r\n            return css `\n          color: ${color\r\n                ? readableColor(themeColor(color)({ theme }))\r\n                : themeColor('primary')({ theme })};\n          ${color &&\r\n                css `\n            background: ${themeColor(color)};\n          `}\n\n          ${!color &&\r\n                css `\n            border: 1px solid ${themeColor('primary')};\n          `}\n\n        &:hover {\n            background: ${color\r\n                ? themeColor(color, 'dark')({ theme })\r\n                : themeColor('tint', 'level3')({ theme })};\n            ${!color &&\r\n                css `\n              outline: 1px solid ${themeColor('primary')};\n            `}\n          }\n        `;\r\n    }\r\n};\r\nconst ButtonStyle = styled.button `\n  height: ${({ theme }) => getButtonHeight(theme)};\n  white-space: nowrap;\n  display: inline-flex;\n  align-items: center;\n  text-decoration: none;\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 20px;\n  padding: ${({ size: sizeProp, theme }) => sizeProp ? '0' : themeSpacing(3, 4)({ theme })};\n  ${({ size: sizeProp, square }) => (sizeProp || square) && // make the button square\r\n    css `\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      ${size(sizeProp || defaultProps.size)}// width and height\n    `}\n  ${transitions(['color', 'background-color'], '0.1s ease-in-out')}\n  ${getVariant()}\n  ${flexboxMinHeightFix()} // ie fix\n  ${({ taskflow }) => taskflow &&\r\n    css `\n      position: relative;\n      min-width: initial;\n      padding-right: 0;\n      padding-top: 0; // safari fix\n      padding-bottom: 0; // safari fix\n      line-height: ${({ theme }) => getButtonHeight(theme)}; // safari 10.1 fix\n      z-index: 0;\n      && {\n        margin-right: 25px;\n      }\n      &:focus ${ArrowRight}:after {\n        opacity: 1;\n      }\n    `}\n  ${Icon} {\n    flex-shrink: 0;\n  }\n  &:disabled {\n    cursor: default;\n    outline: none;\n    border: none;\n    color: ${themeColor('tint', 'level4')};\n    background-color: ${themeColor('tint', 'level3')};\n    ${svgFill(themeColor('tint', 'level4'))};\n    text-decoration: none;\n    ${({ taskflow }) => taskflow &&\r\n    css `\n        ${ArrowRight} {\n          border-left-color: ${themeColor('tint', 'level3')};\n        }\n      `}\n    ${({ variant }) => variant &&\r\n    variant === 'textButton' &&\r\n    css `\n        background-color: rgba(0, 0, 0, 0);\n      `}\n  }\n`;\r\nexport default ButtonStyle;\r\n//# sourceMappingURL=ButtonStyle.js.map","/* eslint-disable import/prefer-default-export */\r\nimport { css } from 'styled-components';\r\nexport const flexboxMinHeightFix = () => css `\n  &::after {\n    content: '';\n    display: block;\n    min-height: inherit;\n    font-size: 0;\n  }\n`;\r\n//# sourceMappingURL=ie-fixes.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { forwardRef } from 'react';\r\nimport Icon, { defaultProps as iconDefaultProps } from '../Icon/Icon';\r\nimport ButtonStyle, { ArrowRight, IconLeft, IconRight, } from './ButtonStyle';\r\nconst Button = forwardRef((_a, ref) => {\r\n    var { children, iconLeft, iconRight, icon, iconSize, taskflow } = _a, otherProps = __rest(_a, [\"children\", \"iconLeft\", \"iconRight\", \"icon\", \"iconSize\", \"taskflow\"]);\r\n    const iconProps = {\r\n        size: iconSize || iconDefaultProps.size,\r\n    };\r\n    return (_jsxs(ButtonStyle, Object.assign({ ref: ref }, otherProps, { taskflow: taskflow }, { children: [iconLeft && _jsx(IconLeft, Object.assign({}, iconProps, { children: iconLeft })), icon ? _jsx(Icon, Object.assign({}, iconProps, { children: icon })) : children, iconRight && _jsx(IconRight, Object.assign({}, iconProps, { children: iconRight })), taskflow && _jsx(ArrowRight, {})] })));\r\n});\r\nexport default Button;\r\n//# sourceMappingURL=Button.js.map","import styled, { css } from 'styled-components';\r\nimport { svgFill, themeColor } from '../../utils';\r\nimport { IconStyle } from '../Icon';\r\nexport default styled.input.attrs({\r\n    type: 'checkbox',\r\n}) `\n  cursor: inherit;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  left: 6px;\n  top: 6px;\n`;\r\nconst CheckboxIconStyle = styled(IconStyle) `\n  display: flex;\n  border-width: 1px;\n  border-style: solid;\n  width: 22px;\n  height: 22px;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  background-color: ${themeColor('tint', 'level1')};\n  transition: background-color 0.2s ease-in-out;\n  pointer-events: none;\n  ${({ checked, indeterminate }) => (checked || indeterminate) &&\r\n    css `\n      color: ${themeColor('tint', 'level7')};\n      background-color: ${themeColor('tint', 'level7')};\n      ${svgFill(themeColor('tint', 'level1'))};\n    `};\n`;\r\nconst CheckboxWrapperStyle = styled.span `\n  position: relative;\n  display: inline-flex;\n  user-select: none;\n  vertical-align: middle;\n  margin-bottom: 1px;\n  padding: 6px;\n  flex-shrink: 0; /* IE11 fix */\n  color: ${themeColor('tint', 'level5')};\n  ${({ disabled }) => disabled &&\r\n    css `\n      pointer-events: none;\n    `}\n  ${({ checked, disabled }) => !checked &&\r\n    !disabled && // IE11 fix. If an element is disabled, you can still hover on it on IE11.\r\n    css `\n      &:hover {\n        color: ${themeColor('tint', 'level7')};\n\n        ${CheckboxIconStyle} {\n          outline-style: solid;\n          outline-width: 1px;\n        }\n      }\n    `}\n    ${({ error, checked, disabled }) => error &&\r\n    !checked &&\r\n    !disabled &&\r\n    css `\n      ${CheckboxIconStyle} {\n        border-color: red;\n        outline: 1px solid red;\n      }\n    `}\n`;\r\nexport { CheckboxWrapperStyle, CheckboxIconStyle };\r\n//# sourceMappingURL=CheckboxStyle.js.map","import styled, { css } from 'styled-components';\r\nimport { svgFill } from '../../utils';\r\nexport const defaultProps = {\r\n    size: 20,\r\n    padding: 0,\r\n    rotate: 0,\r\n};\r\nconst IconStyle = styled.span.withConfig({\r\n    shouldForwardProp: (prop, defaultValidatorFn) => !['size', 'rotate', 'padding', 'inline', 'color'].includes(prop) &&\r\n        defaultValidatorFn(prop),\r\n}) `\n  display: ${({ inline }) => (inline ? 'inline-flex' : 'flex')};\n  ${({ iconUrl }) => iconUrl &&\r\n    css `\n      background-image: url(${iconUrl});\n    `}\n  ${({ size = defaultProps.size, padding = defaultProps.padding }) => css `\n    width: ${size - padding * 2}px;\n    height: ${size - padding * 2}px;\n  `}\n  ${({ padding }) => padding &&\r\n    css `\n      padding: ${padding}px;\n    `};\n  box-sizing: content-box;\n  ${({ rotate = defaultProps.rotate }) => `transform: rotate(${rotate}deg)`};\n\n  & > svg {\n    ${({ size = defaultProps.size, padding = defaultProps.padding }) => css `\n      width: ${size - padding * 2}px;\n      height: ${size - padding * 2}px;\n    `}\n  }\n\n  ${({ color }) => color && svgFill(color)};\n`;\r\nexport default IconStyle;\r\n//# sourceMappingURL=IconStyle.js.map","import styled, { css } from 'styled-components';\r\nimport { themeColor, themeSpacing } from '../../utils';\r\nimport { INPUT_SIZE } from '../shared/constants';\r\nexport const inputCss = css `\n  appearance: none;\n  font-size: 16px;\n  border: solid 1px ${themeColor('tint', 'level5')};\n  border-radius: 0;\n  box-sizing: border-box;\n  line-height: 18px;\n  padding: ${themeSpacing(2)};\n  width: 100%;\n  height: ${INPUT_SIZE}px;\n  ${({ error }) => !error &&\r\n    css `\n      &:hover {\n        border-color: ${themeColor('tint', 'level6')};\n      }\n    `}\n\n  ${({ error }) => error &&\r\n    css `\n      border-color: ${themeColor('secondary', 'main')};\n    `}\n`;\r\nconst InputStyle = styled.input `\n  ${inputCss}\n`;\r\nexport default InputStyle;\r\n//# sourceMappingURL=InputStyle.js.map","import styled, { css } from 'styled-components';\r\nimport { srOnlyStyle, themeColor } from '../../utils';\r\nimport { CheckboxWrapperStyle } from '../Checkbox';\r\nconst LabelStyle = styled.label `\n  display: inline-flex;\n  align-items: ${({ align }) => align};\n  vertical-align: middle;\n  color: ${themeColor('tint', 'level7')};\n  ${({ srOnly }) => srOnly && srOnlyStyle}\n  ${({ disabled }) => disabled\r\n    ? css `\n          opacity: 0.3;\n        `\r\n    : css `\n          cursor: pointer;\n        `}\n  ${({ position }) => (position === 'top' || position === 'bottom') &&\r\n    css `\n      flex-direction: column;\n    `}\n  ${({ position }) => position &&\r\n    css `\n      & ${CheckboxWrapperStyle} {\n        padding-${position}: 12px;\n      }\n    `}\n  \n  ${({ active }) => active &&\r\n    css `\n      font-weight: 700;\n    `}\n`;\r\nLabelStyle.defaultProps = {\r\n    position: 'right',\r\n    align: 'center',\r\n};\r\nexport const LabelTextStyle = styled.span `\n  ${({ position }) => position !== 'top' &&\r\n    position !== 'bottom' &&\r\n    css `\n      margin: 9.2px 0; /* To align the label to a checkbox / radiobutton when having a long text. line-height is 1.15 / 18.4px (from normalize css). Margin top & bottom = lineheight / 2 */\n    `}\n  ${({ position }) => position === 'top' || position === 'left'\r\n    ? css `\n          order: 0;\n        `\r\n    : css `\n          order: 1;\n        `}\n`;\r\nexport default LabelStyle;\r\n//# sourceMappingURL=LabelStyle.js.map","import styled from 'styled-components';\r\nconst SpinnerStyle = styled.div.withConfig({\r\n    shouldForwardProp: (prop, defaultValidatorFn) => !['size', 'color'].includes(prop) && defaultValidatorFn(prop),\r\n}) `\n  @keyframes rotating {\n    0% {\n      transform: rotate(0deg);\n    }\n\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n\n  & svg {\n    animation: rotating 1s linear infinite;\n  }\n`;\r\nexport default SpinnerStyle;\r\n//# sourceMappingURL=SpinnerStyle.js.map","var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { Spinner as SpinnerIcon } from '@amsterdam/asc-assets';\r\nimport Icon from '../Icon/Icon';\r\nimport SpinnerStyle from './SpinnerStyle';\r\nfunction Spinner(_a) {\r\n    var { size, color } = _a, otherProps = __rest(_a, [\"size\", \"color\"]);\r\n    return (_jsx(SpinnerStyle, Object.assign({ size: size }, otherProps, { children: _jsx(Icon, Object.assign({ size: size, color: color }, { children: _jsx(SpinnerIcon, {}) })) })));\r\n}\r\nSpinner.defaultProps = {\r\n    size: 20,\r\n};\r\nexport default Spinner;\r\n//# sourceMappingURL=Spinner.js.map"],"names":[],"sourceRoot":""}